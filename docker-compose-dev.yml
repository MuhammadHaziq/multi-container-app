version: "3.8"
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres_password
    ports:
      - "5432:5432"
    networks:
      - app-network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"
    networks:
      - app-network
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    networks:
      - app-network
  client:
    environment:
      WDS_SOCKET_PORT: 0
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    networks:
      - app-network
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
# Note: The above docker-compose file is a template and may need to be adjusted based on your specific project structure and requirements.
# The volumes and environment variables should be set according to your application needs.
# The Dockerfile.dev files for each service should be created in their respective directories (nginx, server, client, worker).
